name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.19'
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Download dependencies
      run: go mod tidy
    
    - name: Run tests
      run: make test
    
    - name: Test build
      run: make build

  release:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.19'
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Download dependencies
      run: go mod tidy
    
    - name: Get version
      id: version
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION=${GITHUB_REF#refs/tags/}
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"
    
    - name: Build all platforms
      run: |
        mkdir -p build
        VERSION="${{ steps.version.outputs.version }}" make build-all
    
    - name: Create checksums
      run: |
        cd build
        sha256sum OhMySSH-* > checksums.txt
        cat checksums.txt
    
    - name: Generate changelog
      id: changelog
      run: |
        # Get the previous tag
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        
        if [ -n "$PREVIOUS_TAG" ]; then
          echo "## Changes since $PREVIOUS_TAG" > changelog.md
          echo "" >> changelog.md
          git log --pretty=format:"- %s (%an)" $PREVIOUS_TAG..HEAD >> changelog.md
        else
          echo "## Initial Release" > changelog.md
          echo "" >> changelog.md
          echo "This is the first release of OhMySSH." >> changelog.md
        fi
        
        echo "" >> changelog.md
        echo "## Download" >> changelog.md
        echo "" >> changelog.md
        echo "Choose the appropriate binary for your platform:" >> changelog.md
        echo "- **Linux AMD64:** \`OhMySSH-linux-amd64\`" >> changelog.md
        echo "- **Linux ARM64:** \`OhMySSH-linux-arm64\`" >> changelog.md
        echo "- **macOS Intel:** \`OhMySSH-darwin-amd64\`" >> changelog.md
        echo "- **macOS Apple Silicon:** \`OhMySSH-darwin-arm64\`" >> changelog.md
        echo "- **Windows AMD64:** \`OhMySSH-windows-amd64.exe\`" >> changelog.md
        echo "- **Windows ARM64:** \`OhMySSH-windows-arm64.exe\`" >> changelog.md
        echo "" >> changelog.md
        echo "## Installation" >> changelog.md
        echo "" >> changelog.md
        echo "\`\`\`bash" >> changelog.md
        echo "# Download for your platform (example for Linux AMD64)" >> changelog.md
        echo "curl -L https://github.com/pozgo/OhMySSH/releases/download/${{ steps.version.outputs.version }}/OhMySSH-linux-amd64 -o OhMySSH" >> changelog.md
        echo "chmod +x OhMySSH" >> changelog.md
        echo "./OhMySSH" >> changelog.md
        echo "\`\`\`" >> changelog.md
        echo "" >> changelog.md
        echo "## Checksums" >> changelog.md
        echo "" >> changelog.md
        echo "Verify your download with SHA256 checksums:" >> changelog.md
        echo "\`\`\`" >> changelog.md
        cat build/checksums.txt >> changelog.md
        echo "\`\`\`" >> changelog.md
        
        cat changelog.md
    
    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create ${{ steps.version.outputs.version }} \
          --title "OhMySSH ${{ steps.version.outputs.version }}" \
          --notes-file changelog.md \
          build/OhMySSH-* \
          build/checksums.txt

  # Update main branch after successful release (if triggered by tag)
  update-main:
    needs: release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Update main branch
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
        # Checkout main and merge the tag
        git checkout main
        git merge ${{ github.ref_name }} --no-ff -m "Release ${{ github.ref_name }}"
        git push origin main